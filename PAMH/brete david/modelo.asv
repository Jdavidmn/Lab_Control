syms KP KD KI N s S

tf3 = tf([5.3807], [1 0.1984 15.6570]);             % la que da el system identification

Ac = [0, 1; -tf3.denominator{1}(3), -tf3.denominator{1}(2)];

Bc = [0; tf3.numerator{1}(3)];

Cc = [1, 0];

[ Aa, Ba, Ca, Da] = tf2ss([5.3807], [1 0.1984 15.6570]);

sys = ss(Ac, Bc, Cc, 0);

As = [Ac [0; 0]; -Cc 0];

Bs = [Bc; 0];

Ms = [Bs As*Bs As^2*Bs];        % matriz de controlabilidad

rank(Ms);       % si da 3 es controlable

Ps = [-2+1.5i -2-1.5i -3];

Ks = acker(As, Bs, Ps);


% metodo de lqr

Q = [1 0 0; 0 1 0; 0 0 40];

R = 1;

Kss = lqr(As, Bs, Q, R)

% ubicacion de los polos por lqr

polos = eig(As - Bs*Kss);

Ki = -Kss(3);
Kd = Kss(2);
Kp = Kss(1);

% [Ac, Bc, Cc, Dc] = canon(A, B);


% sisotool('rlocus', tf3);

%Control PID por IMC
%[num, den]=tfdata(C,'v');
%PID=KP+KI/S+(KD*N*S)/(S+N);
%collect(PID);
%N=den(2);
%KI=num(3)/N;
%KP=(num(2)-KI)/N;
%KD=(num(1)-KP)/N;

%-------------------------------
%-  REI - UBICACION DE POLOS   -
%-------------------------------

As = [Ac [0; 0]; -Cc 0];

Bs = [Bc; 0];
